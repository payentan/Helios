# Refer to https://kubernetes.io/docs/setup/independent/install-kubeadm/
#
- name: Disable swap [1/2]
  shell: swapoff -a

- name: Disable swap [2/2]
  shell: sed -i '/ swap / d' /etc/fstab

- name: Stop SELinux Enforcing [1/2]
  shell: setenforce 0

- name: Stop SELinux Enforcing [2/2]
  shell: sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

- name: Disable firewalld service
  service: name=firewalld state=stopped enabled=no

- name: Yum install yum-utils device-mapper-persistent-data lvm2
  yum: 
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state:
      present
      
- name: Add repository
  copy: src=docker-ce.repo dest=/etc/yum.repos.d/docker-ce.repo

- name: Yum install docker
  yum: name=docker-ce-18.06.0.ce state=present

- name: Enable and start Docker service
  service: name=docker state=started enabled=yes

- name: Transfer kubernetes.repo
  copy: src=kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo

- name: Transfer file k8s.conf
  copy: src=k8s.conf dest=/etc/sysctl.d/k8s.conf

- name: Set system parameters for k8s
  shell: sysctl --system

- name: Yum install kubelet kubeadm kubectl
  yum: 
    name:
      - kubelet-{{ K8S_VERSION }}
      - kubeadm-{{ K8S_VERSION }}
      - kubectl-{{ K8S_VERSION }}
    state:
      present
    disable_gpg_check:
      yes

#- name: Delete file kubernetes.repo
#  shell: rm -f /etc/yum.repos.d/kubernetes.repo

- name: Yum install epel-release
  yum:
    name:
      - epel-release
    state:
      present

- name: Yum install and pip rpm
  yum:
    name:
      - python-pip
    state:
      present

- name:  Install docker-py package.
  pip:
    name: docker-py

- name: Enable and start kubelet service
  service: name=kubelet state=started enabled=yes

- name: Pull kube-apiserver image 
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver-amd64:v{{ K8S_VERSION }}

- name: Retag kube-apiserver image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver-amd64:v{{ K8S_VERSION }} k8s.gcr.io/kube-apiserver:v{{ K8S_VERSION }}

- name: Pull kube-controller-manager image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager-amd64:v{{ K8S_VERSION }}

- name: Retag kube-controller-manager image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager-amd64:v{{ K8S_VERSION }} k8s.gcr.io/kube-controller-manager:v{{ K8S_VERSION }}

- name: Pull kube-scheduler image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler-amd64:v{{ K8S_VERSION }}

- name: Retag kube-scheduler image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler-amd64:v{{ K8S_VERSION }} k8s.gcr.io/kube-scheduler:v{{ K8S_VERSION }}

- name: Pull kube-proxy image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy-amd64:v{{ K8S_VERSION }}

- name: Retag kube-proxy image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy-amd64:v{{ K8S_VERSION }} k8s.gcr.io/kube-proxy:v{{ K8S_VERSION }}

- name: Pull etcd image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/etcd-amd64:{{ ETCD_VERSION }}

- name: Retag etcd image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd-amd64:{{ ETCD_VERSION }} k8s.gcr.io/etcd:{{ ETCD_VERSION }}

- name: Pull pause image

  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:{{ PAUSE_VERSION }}

- name: Retag pause image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:{{ PAUSE_VERSION }} k8s.gcr.io/pause:{{ PAUSE_VERSION }}

- name: Pull coredns image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:{{ DNS_VERSION }}

- name: Retag coredns image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:{{ DNS_VERSION }} k8s.gcr.io/coredns:{{ DNS_VERSION }}

- name: Pull flannel image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel:{{ FLANNEL_VERSION }}

- name: Retag flannel image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/kubernetes_containers/flannel:{{ FLANNEL_VERSION }} quay.io/coreos/flannel:{{ FLANNEL_VERSION }}

- name: Pull kubernetes-dashboard image
  docker_image:
    name: registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:{{ DASHBOARD_VERSION }}

- name: Retag kubernetes-dashboard image
  shell: docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:{{ DASHBOARD_VERSION }} k8s.gcr.io/kubernetes-dashboard:{{ DASHBOARD_VERSION }}

- name: Kubeadm init
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 || echo

- name: Copy config file
  shell: mkdir -p $HOME/.kube && cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config

- name: Deploy flannel network to the cluster [1/3]
  copy: src=kube-flannel.yml dest=~/kube-flannel.yml

- name: Deploy flannel network to the cluster [2/3]
  shell: kubectl apply -f ~/kube-flannel.yml

- name: Deploy flannel network to the cluster [3/3]
  shell: rm -f ~/kube-flannel.yml

